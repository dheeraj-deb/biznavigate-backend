generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model shops {
  id         Int     @id @default(autoincrement())
  shop_name  String  @db.VarChar(50)
  gst_number String  @db.Char(15)
  address    String
  pan        String? @db.Char(10)
  mobile_num String? @db.VarChar(15)
  language   String? @default("en") @db.VarChar
}

model whatsapp_templates {
  id         Int      @id @default(autoincrement())
  sid        String   @db.VarChar(1000)
  key        String   @db.Char(50)
  language   String   @db.Char(5)
  variables  Json
  is_active  Boolean  @default(true)
  created_at DateTime @default(now()) @db.Date
  updated_at DateTime @default(now()) @db.Date
}

model OnboardingSession {
  id           Int      @id @default(autoincrement())
  phone_number String
  step_index   Int
  session_id   String   @unique
  created_at   DateTime @default(now())
  updated_at   DateTime
  status       String
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model business_user {
  businessName           String   @db.VarChar(100)
  gstin                  String   @db.VarChar(15)
  contactEmail           String   @db.VarChar(100)
  contactPhone           String   @db.VarChar(15)
  address                String
  notificationPreference String   @db.VarChar(20)
  customerId             String   @unique
  id                     Int      @id @default(autoincrement())
  platformId             Decimal? @db.Decimal
}

model integrations {
  name String @db.VarChar
  id   Int    @id @default(autoincrement())
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model zoho_user_credential {
  access_token      String? @db.VarChar
  refresh_token     String? @db.VarChar
  organization_id   String  @db.VarChar
  business_user_id  Int     @unique
  id                Int     @id @default(autoincrement())
  client_id         String? @unique(map: "client_id") @db.VarChar
  client_secret     String? @db.VarChar
  expires_in        Int?
  token_acquired_at String? @db.VarChar
}

model ConversationSession {
  id          String   @id @default(uuid())
  sessionId   String   @unique
  userId      String
  phoneNumber String
  context     Json
  currentStep String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ConversationMessage {
  id        String   @id @default(uuid())
  sessionId String
  message   String
  fromUser  Boolean
  createdAt DateTime @default(now())
}
